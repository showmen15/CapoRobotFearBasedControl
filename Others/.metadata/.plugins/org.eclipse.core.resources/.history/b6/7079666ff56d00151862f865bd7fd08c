package pl.edu.agh.capo.fear.communication;

import pl.edu.agh.capo.fear.CapoRobotMotionModel;
import pl.edu.agh.capo.fear.data.LocationInTime;
import pl.edu.agh.capo.fear.data.Trajectory;

import com.rabbitmq.client.Channel;
import com.vividsolutions.jts.math.Vector2D;

public class StatePublisher {

	protected final double trajectoryTimeStep = 0.2;
	protected final int trajectoryStepCount = 8;
	
	protected static Channel rabbitmqChannel = null;
	
	
	public StatePublisher ()
	{
		if (rabbitmqChannel == null))
			initRabbit();
			
	}
	
	public void publishCapoRobotStateAndPlan(CapoRobotMotionModel robotMotionModel, Vector2D destination)
	{
		Trajectory trajectory = new Trajectory(destination);
		for (int i = 0 ; i < trajectoryStepCount ; i ++)
			trajectory.addTrajectoryStep(new LocationInTime(
					robotMotionModel.getLocationAfterTime(trajectoryTimeStep*i)	
					, trajectoryTimeStep*i));
		
		///publish
		
	}
}
